{"version":3,"sources":["utils/constants.js","components/form/form.js","components/table/table.js","pages/events/events.js","routers.js","pages/main/main.js","components/appRouter/appRouter.js","App.js","reportWebVitals.js","index.js"],"names":["EVENTS_ROUTE","Form","creatEvent","name","className","onSubmit","e","preventDefault","input","target","querySelector","warning","description","value","length","textContent","classList","add","remove","type","placeholder","Row","text","date","classMode","Table","rows","events","map","row","index","style","Date","Events","useState","changeEvents","today","getDate","day","setDate","month","getMonth","newEvent","getFullYear","console","log","onClick","allRouts","path","Component","to","AppRouter","component","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e116f6a.chunk.js","sourcesContent":["export const HOME_ROUTE = \"/\";\r\nexport const EVENTS_ROUTE = \"/events\";\r\n","import React from \"react\";\r\nimport \"./form.scss\";\r\n\r\nconst Form = ({ creatEvent }) => {\r\n  function addEvent(e) {\r\n    e.preventDefault();\r\n    const input = e.target.querySelector(\"input\");\r\n    const warning = e.target.querySelector(\".event-form__warning\");\r\n    const description = input.value;\r\n    if (description.length) {\r\n      if (description.length > 120) {\r\n        warning.textContent = \"Описание больше 120 символов!\";\r\n        warning.classList.add(\"event-form__warning_show\");\r\n        return;\r\n      } else {\r\n        warning.classList.remove(\"event-form__warning_show\");\r\n      }\r\n      creatEvent(description);\r\n      input.value = \"\";\r\n    } else {\r\n      warning.textContent = \"Введите описание события!\";\r\n      warning.classList.add(\"event-form__warning_show\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form name='addEvent' className='event-form' onSubmit={addEvent}>\r\n      <label>Событие:</label>\r\n      <input\r\n        type='text'\r\n        name='eventName'\r\n        placeholder='Введите описание события (максимум 120 символов)'\r\n      />\r\n      <p className='event-form__warning'></p>\r\n      <button type='submit'> Добавить </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./table.scss\";\r\n\r\nfunction Row({ text, date, classMode }) {\r\n  return (\r\n    <tr className={classMode}>\r\n      <td>{date}</td>\r\n      <td>{text}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst Table = ({ events }) => {\r\n  const rows = events.map((row, index) => {\r\n    let date = row.date;\r\n    date = `${date[3] + date[4]}.${date[0] + date[1]}.${\r\n      date[6] + date[7] + date[8] + date[9]\r\n    }`;\r\n    const hasDate = new Date(date);\r\n    const today = new Date();\r\n\r\n    const already = hasDate < today ? \" table-events__row_already\" : \"\";\r\n    const style = \"table-events__row\" + already;\r\n    return (\r\n      <Row\r\n        key={index}\r\n        text={row.description}\r\n        date={row.date}\r\n        classMode={style}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <table className='table-events'>\r\n      <thead>\r\n        <Row\r\n          text={\"Описание события\"}\r\n          date={\"Дата\"}\r\n          classMode='table-events__head'\r\n        />\r\n      </thead>\r\n      <tbody>{rows}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport \"./events.scss\";\r\n\r\nimport Form from \"../../components/form/form\";\r\nimport Table from \"../../components/table/table\";\r\nconst Events = () => {\r\n  const [events, changeEvents] = useState([\r\n    { date: \"23.03.2021\", description: \"test description\" },\r\n    { date: \"01.04.2021\", description: \"joker`s day\" },\r\n  ]);\r\n  const creatEvent = (description) => {\r\n    const today = new Date();\r\n    let date = today.getDate() + 7;\r\n    date = new Date(today.setDate(date));\r\n    const day =\r\n      date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`;\r\n    const month =\r\n      date.getMonth() + 1 < 10\r\n        ? `0${date.getMonth() + 1}`\r\n        : `${date.getMonth() + 1}`;\r\n    const newEvent = {\r\n      date: `${day}.${month}.${date.getFullYear()}`,\r\n      description,\r\n    };\r\n    console.log(newEvent);\r\n    changeEvents([newEvent, ...events]);\r\n  };\r\n  return (\r\n    <div className='events'>\r\n      <Form creatEvent={creatEvent} />\r\n      <button className='events__btn' onClick={() => changeEvents([])}>\r\n        Очистить таблицу\r\n      </button>\r\n      <Table events={events} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import Events from \"./pages/events/events\";\r\nimport Main from \"./pages/main/main\";\r\nimport { EVENTS_ROUTE, HOME_ROUTE } from \"./utils/constants\";\r\n\r\nexport const allRouts = [\r\n  {\r\n    path: HOME_ROUTE,\r\n    Component: Main,\r\n  },\r\n  {\r\n    path: EVENTS_ROUTE,\r\n    Component: Events,\r\n  },\r\n];\r\n","import \"./main.scss\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EVENTS_ROUTE } from \"../../utils/constants\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className='main'>\r\n      <Link to={EVENTS_ROUTE}>\r\n        <button className='main__btn'> События </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { HOME_ROUTE } from \"../../utils/constants\";\r\nimport { allRouts } from \"../../routers\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      {allRouts.map(({ path, Component }, index) => (\r\n        <Route key={index} path={path} component={Component} exact />\r\n      ))}\r\n\r\n      <Redirect to={HOME_ROUTE} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import \"./App.scss\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/appRouter/appRouter\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AppRouter />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}